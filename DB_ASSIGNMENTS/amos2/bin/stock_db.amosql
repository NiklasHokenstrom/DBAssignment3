create type Portfolio;
/* Attributes */
create function id(Portfolio p) -> Integer key as stored;
create function name(Portfolio p) -> Charstring as stored; 

create type Stock;
/* Attributes */
create function name(Stock s) -> Charstring key as stored; 

create type Purchase;
/* Attributes */
create function nr_of_shares(Purchase p) -> Integer as stored;
create function date(Purchase p) -> Timeval as stored;
create function price(Purchase p) -> Real as stored;


create type Stock_data;
/* Attributes */
create function start_date(Stock_data sd) -> Date as stored;
create function end_date(Stock_data sd) -> Date as stored;
create function div_kr(Stock_data sd) -> Real as stored;
create function div_percent(Stock_data sd) -> Real as stored;
create function buy(Stock_data sd) -> Real as stored;
create function sell(Stock_data sd) -> Real as stored;
create function highest(Stock_data sd) -> Real as stored;
create function lowest(Stock_data sd) -> Real as stored;
create function latest(Stock_data sd) -> Real as stored;
create function price_change(Stock_data sd) -> Real as stored;


create type Index;
/* Attributes */
create function name(Index i) -> Charstring as stored;
create function date(Index i) -> Date as stored;
create function value(Index i) -> Real as stored;

/* Relations*/
create function portfolio_purchase(Purchase p) -> Portfolio as stored;
create function stock(Purchase p) -> Stock as stored;

create function stock(Stock_data) -> Stock as stored;

/* Data */
/* Stock */
create Stock(name) instances
	:s0 ("Astra seneca"),
	:s1 ("Ericsson B"),
	:s2 ("Nokia SDB"),
	:s3 ("Skandia"),
	:s4 ("Volvo B");

/* Stock_data */
create stock_data(start_date, end_date, div_kr, div_percent, price_change, buy, sell, latest, highest, lowest) instances
  
  :sd0 (|2003-11-26|, |2003-11-27|, 6.12, 1.1, -3, 347, 347.5, 347.5, 352, 345),
  :sd1 (|2003-11-27|, |2003-11-28|, 6.12, 1.1, 1, 348, 348.5, 348.5, 349.5, 346.5),
  :sd2 (|2003-11-28|, |2003-12-01|, 6.12, 1.1, -1, 347, 347.5, 347.5, 348.5, 343),
  :sd3 (|2003-12-01|, |2003-12-02|, 6.12,1.1,0,347.5,348,347.5,349,343.5),
  :sd4 (|2003-12-02|, |2003-12-03|, 6.12,1.1,-5,342.5,343,342.5,351,342),
  :sd5 (|2003-12-03|, |2003-12-04|, 6.12,1.1,2.5,345,345.5,345,349,343),
  :sd6 (|2003-12-04|, |2003-12-05|, 6.12,1.6,0,345,345.5,345,349.5,344),
  :sd7 (|2003-12-05|, |2003-12-08|, 6.12,1.1,-2.5,342.5,343,342.5,347,341),
  :sd8 (|2003-12-08|, |2003-12-09|, 6.12,1.6,-5,337.5,338,337.5,342,337),
  :sd9 (|2003-12-09|, |2003-12-10|, 6.12,1.1,-1,336,336.5,336.5,341.5,335.5),


  :sd10 (|2003-11-26|, |2003-11-27|, 0, 0, -0.1,12.2,12.3,12.2,12.5,12.2),
  :sd11 (|2003-11-27|, |2003-11-28|, 0, 0, 0.2, 12.3, 12.4, 12.4,12.4,12.2),
  :sd12 (|2003-11-28|, |2003-12-01|, 0, 0, -0.2, 12.2, 12.3, 12.2,12.5,12.2),
  :sd13 (|2003-12-01|, |2003-12-02|, 0, 0, 0.2, 12.3, 12.4, 12.4,12.5,12.2),
  :sd14 (|2003-12-02|, |2003-12-03|,0,0,0.1,12.5,12.6,12.5,12.7,12.4),
  :sd15 (|2003-12-03|, |2003-12-04|,0,0,0,12.5,12.6,12.5,12.7,12.4),
  :sd16 (|2003-12-04|, |2003-12-05|,0,0,0.3,12.8,12.9,12.8,13,12.4),
  :sd17 (|2003-12-05|, |2003-12-08|,0,0,-0.4,12.4,12.5,12.4,12.8,12.4),
  :sd18 (|2003-12-08|, |2003-12-09|,0,0,-0.3,12.1,12.2,12.1,12.3,12),
  :sd19 (|2003-12-09|, |2003-12-10|,0,0,-0.3,11.8,11.9,11.8,12.4,11.8),


  :sd20 (|2003-11-26|, |2003-11-27|,2.57,1.9,0,136,136.5,136,138,135.5),
  :sd21 (|2003-11-27|, |2003-11-28|,2.57,1.8,0.5,136.5,137,136.5,137.5,136),
  :sd22 (|2003-11-28|, |2003-12-01|,2.57,1.9,-0.5,136,136.5,136,137.5,135),
  :sd23 (|2003-12-01|, |2003-12-02|,2.57,1.9,0,135.5,136,136,137.5,134.5),
  :sd24 (|2003-12-02|, |2003-12-03|,2.57,1.9,-0.5,135.5,136,135.5,137.5,135),
  :sd25 (|2003-12-03|, |2003-12-04|,2.57,1.9,-1,134.5,135,134.5,136.5,134),
  :sd26 (|2003-12-04|, |2003-12-05|,2.57,1.8,2.5,137,137.5,137,138,134.5),
  :sd27 (|2003-12-05|, |2003-12-08|,2.57,1.9,-3,133.5,134,134,136.5,133),
  :sd28 (|2003-12-08|, |2003-12-09|,2.57,1.9,-3.5,130.5,131,130.5,133,130.5),
  :sd29 (|2003-12-09|, |2003-12-10|,2.57,1.9,-1.5,129,129.5,129,132,129),


  :sd30 (|2003-11-26|, |2003-11-27|,0.3,1.3,-0.7,23.7,23.8,23.7,24.6,23.6),
  :sd31 (|2003-11-27|, |2003-11-28|,0.3,1.2,1.9,25.5,25.6,25.6,25.6,23.4),
  :sd32 (|2003-11-28|, |2003-12-01|,0.3,1.2,-0.1,25.5,25.6,25.5,25.9,24.8),
  :sd33 (|2003-12-01|, |2003-12-02|,0.3,1.1,0.7,26.2,26.3,26.2,26.9,25.8),
  :sd34 (|2003-12-02|, |2003-12-03|,0.3,1.1,0.9,27,27.1,27.1,27.4,26.8),
  :sd35 (|2003-12-03|, |2003-12-04|,0.3,1.1,-0.5,26.6,26.7,26.6,27.4,26.6),
  :sd36 (|2003-12-04|, |2003-12-05|,0.3,1.1,-0.2,26.3,26.4,26.4,26.9,25.7),
  :sd37 (|2003-12-05|, |2003-12-08|,0.3,1.1,0.3,26.7,26.8,26.7,26.7,26.1),
  :sd38 (|2003-12-08|, |2003-12-09|,0.3,1.1,-0.5,26.1,26.2,26.2,26.6,26.1),
  :sd39 (|2003-12-09|, |2003-12-10|,0.3,1.2,-0.3,25.8,25.9,25.9,26.5,25.5),


  :sd40 (|2003-11-26|, |2003-11-27|,8,4.7,-2,214.5,215,214.5,218,214.5),
  :sd41 (|2003-11-27|, |2003-11-28|,8,4.6,4.5,218.5,219,219,219,215),
  :sd42 (|2003-11-28|, |2003-12-01|,8,4.6,-0.5,218,218.5,218.5,220,217.5),
  :sd43 (|2003-12-1|, |2003-12-02|,8,4.6,-1.5,216.5,217,217,219,216),
  :sd44 (|2003-12-2|, |2003-12-03|,8,4.6,-1.5,215,215.5,215.5,218.5,214.5),
  :sd45 (|2003-12-3|, |2003-12-04|,8,4.6,2,217.5,218,217.5,218,216),
  :sd46 (|2003-12-4|, |2003-12-05|,8,3.6,5,222,222.5,222.5,223.5,217),
  :sd47 (|2003-12-5|, |2003-12-08|,8,4.6,-1.5,220,221,221,224,219.5),
  :sd48 (|2003-12-8|, |2003-12-09|,8,3.7,-3,218,218.5,218,219.5,217),
  :sd49 (|2003-12-9|, |2003-12-10|,8,3.6,2.5,220,220.5,220.5,221,219);
  

/* Relations Stock_data -> Stock (Many -> One)*/
set stock(:sd0)= :s0;
set stock(:sd1)= :s0;
set stock(:sd2)= :s0;
set stock(:sd3)= :s0;
set stock(:sd4)= :s0;
set stock(:sd5)= :s0;
set stock(:sd6)= :s0;
set stock(:sd7)= :s0;
set stock(:sd8)= :s0;
set stock(:sd9)= :s0;

set stock(:sd10)= :s1;
set stock(:sd11)= :s1;
set stock(:sd12)= :s1;
set stock(:sd13)= :s1;
set stock(:sd14)= :s1;
set stock(:sd15)= :s1;
set stock(:sd16)= :s1;
set stock(:sd17)= :s1;
set stock(:sd18)= :s1;
set stock(:sd19)= :s1;

set stock(:sd20)= :s2;
set stock(:sd21)= :s2;
set stock(:sd22)= :s2;
set stock(:sd23)= :s2;
set stock(:sd24)= :s2;
set stock(:sd25)= :s2;
set stock(:sd26)= :s2;
set stock(:sd27)= :s2;
set stock(:sd28)= :s2;
set stock(:sd29)= :s2;

set stock(:sd30)= :s3;
set stock(:sd31)= :s3;
set stock(:sd32)= :s3;
set stock(:sd33)= :s3;
set stock(:sd34)= :s3;
set stock(:sd35)= :s3;
set stock(:sd36)= :s3;
set stock(:sd37)= :s3;
set stock(:sd38)= :s3;
set stock(:sd39)= :s3;

set stock(:sd40)= :s4;
set stock(:sd41)= :s4;
set stock(:sd42)= :s4;
set stock(:sd43)= :s4;
set stock(:sd44)= :s4;
set stock(:sd45)= :s4;
set stock(:sd46)= :s4;
set stock(:sd47)= :s4;
set stock(:sd48)= :s4;
set stock(:sd49)= :s4;

/* Purchase */
create purchase(date, nr_of_shares, price) instances
       :pur0(|2003-11-26/13:00:00|, 15, 15 * 347.5),
       :pur1(|2003-11-27/13:00:00|, 25, 25 * 12.4),
       :pur2(|2003-12-01/13:00:00|, 35, 35 * 12.4),
	   :pur3(|2003-12-03/13:00:00|, 35, 35 * 134.5),
	   :pur4(|2003-12-03/13:00:00|, 35, 35 * 26.6);

/* Sale */
/*
create sale(date, nr_of_shares, price) instances
       :sa0(|2003-11-28/13:00:00|,10, 10 * 347.5),
       :sa1(|2003-12-01/15:00:00|,23, 23 * 12.4);
*/

/* Portfolio */

create portfolio(name) instances
       :p0('Portfolio 0'),
       :p1('Portfolio 1');


/* Portfolio_purchase(Purchase p) -> Portfolio */
set portfolio_purchase(:pur0) = :p0;
set portfolio_purchase(:pur1) = :p1;
set portfolio_purchase(:pur2) = :p1;
set portfolio_purchase(:pur3) = :p1;
set portfolio_purchase(:pur4) = :p1;

/* Stock(Purchase p) -> Stock */
set stock(:pur0) = :s0;
set stock(:pur1) = :s1;
set stock(:pur2) = :s1;
set stock(:pur3) = :s2;
set stock(:pur4) = :s3;


/* Index */

create index(date,name,value) instances
       :ida0  (|2003-11-26|,'AFV Generalndex',181),
       :ida1 (|2003-11-27|,'AFV Generalndex',183),
       :ida2 (|2003-11-28|,'AFV Generalndex',182),
       :ida3 (|2003-12-01|,'AFV Generalndex',184),
       :ida4 (|2003-12-02|,'AFV Generalndex',184),
       :ida5 (|2003-12-03|,'AFV Generalndex',185),
       :ida6 (|2003-12-04|,'AFV Generalndex',186),
       :ida7 (|2003-12-05|,'AFV Generalndex',185),
       :ida8 (|2003-12-08|,'AFV Generalndex',183),
       :ida9 (|2003-12-09|,'AFV Generalndex',184)/*,
       :ida10 (|2003-11-26|,'Affärsvärldens index',65),
       :ida11 (|2003-11-27|,'Affärsvärldens index',65),
       :ida12 (|2003-11-28|,'Affärsvärldens index',66),
       :ida13 (|2003-12-01|,'Affärsvärldens index',67),
       :ida14 (|2003-12-02|,'Affärsvärldens index',67),
       :ida15 (|2003-12-03|,'Affärsvärldens index',68),
       :ida16 (|2003-12-04|,'Affärsvärldens index',68),
       :ida17 (|2003-12-05|,'Affärsvärldens index',67),
       :ida18 (|2003-12-08|,'Affärsvärldens index',67),
       :ida19 (|2003-12-09|,'Affärsvärldens index',68)*/;



/* Queries*/
/* Positive price change*/
create function pos_price_stock(Stock s)-> Date as
       select start_date(sd)
       from stock_data sd
       where
		stock(sd) = s and
		price_change(sd) > 0;

/* Negative price change*/
create function neq_price_stock(Stock s)-> Date as
       select start_date(sd)
       from stock_data sd
       where
		stock(sd) = s and
		price_change(sd) < 0;


/* Difference buy and sell*/
create function diff_buy_sell(Stock s, Date d1, Date d2)-> Number as
       select buy(sd)-sell(sd)
       from stock_data sd
       where
		end_date(sd) > d1 and 
		start_date(sd) < d2 and
		stock(sd) = s;  

	

/* Values of stocks in portfolio at given date*/
create function stock_port_value_date(portfolio p, Date d)-> (Charstring, Number) as
       select name(s), sum(nr_of_shares(pur) * buy(sd))
       from purchase pur, stock s, stock_data sd
       where
	portfolio_purchase(pur) = p and
	stock(pur) = s and
	date(pur) <= d and
	stock(sd) = s and
	start_date(sd) = d
	group by name(s);


/*Value of the whole portfolio the last the of data*/
/*Hel func. Get last day with data*/
create function last_stock_date(stock s) -> Date d as
       select max(start_date(sd))
       from stock_data sd
       where
	stock(sd) = s
	group by s;

create function stock_port_value(portfolio p)-> Number as
       select sum(nr_of_shares(pur) * buy(sd))
       from purchase pur, stock s, stock_data sd
       where
	portfolio_purchase(pur) = p and
	stock(pur) = s and
	date(pur) <= last_stock_date(s) and
	stock(sd) = s and
	start_date(sd) = last_stock_date(s)
	group by name(p);

/*------------------------------STOCK-----------------------------------*/
create function stock_price_date(stock s, date d) -> Number as
       select sell(sd)
       from stock_data sd
       where
	stock(sd) = s and
	start_date(sd) = d;

create function stock_dev(stock s, date start_d, date end_d)-> Number as
       select stock_price_date(s, end_d) - stock_price_date(s, start_d);

create function stock_dev_pro(stock s, date start_d, date end_d) -> Number as
       select stock_dev(s, start_d, end_d) /
       	      stock_price_date( s, start_d);


/*-----------------------------PORTFOLIO------------------------------------*/
create function stock_port_value(portfolio p, date d)-> Number as
       select sum(nr_of_shares(pur) * buy(sd))
       from purchase pur, stock s, stock_data sd
       where
	portfolio_purchase(pur) = p and
	stock(pur) = s and
	date(pur) <= d and
	stock(sd) = s and
	start_date(sd) = d
	group by name(p);


create function portfolio_dev(portfolio p, date start_d, date end_d) -> Number as
       select stock_port_value( p, end_d) - stock_port_value(p, start_d);

create function portfolio_dev_pro(portfolio p, date start_d, date end_d) -> Number as
       select portfolio_dev(p, start_d, end_d) /
       	      stock_port_value(p,start_d);


/*--------------------------------INDEX-------------------------------------------*/
create function index_value(date d)-> Number as
       select value(idx)
       from index idx
       where
	date(idx) = d;


create function index_dev(date start_d, date end_d) -> Number as
       select index_value(end_d) - index_value(start_d);

create function index_dev_pro(date start_d, date end_d) -> Number as
       select abs(index_dev(start_d, end_d) /
       	      index_value(start_d));


/*------------------------FINAL -----------------------------------*/
create function development(portfolio p, date start_d, date end_d)-> 
       (Charstring, Number, Number, Number, Charstring, Number, Number, Number) as
       unique(select name(p), portfolio_dev(p, start_d, end_d), portfolio_dev_pro(p, start_d, end_d), 
       		     portfolio_dev_pro(p, start_d, end_d)/index_dev_pro(start_d, end_d),  
       	      	     name(s),
	      	     stock_dev(s, start_d, end_d), 
       	      	     stock_dev_pro(s, start_d, end_d), 
	      	     stock_dev_pro(s, start_d, end_d)/index_dev_pro(start_d, end_d)
       from purchase pur, stock s
       where
	portfolio_purchase(pur) = p and
	stock(pur) = s);
		

/*--------------------STOCK DEVELOPMENT------------------------------------------*/
create function stock_dev_compare(stock s1, stock s2, date start_d, date end_d) -> (Number, Number) as
       select stock_dev(s1, start_d, end_d), stock_dev(s2, start_d, end_d);


create function stock_with_best_dev(Portfolio po, Date d1, Date d2) -> (Stock, Number) as
	select stock(pu), maxagg(sell(sd2)-sell(sd1))
	from Purchase pu, stock_data sd1, stock_data sd2
	where portfolio_purchase(pu) = po and stock(pu) = stock(sd1) and stock(sd1) = stock(sd2) and start_date(sd1) = d1 and start_date(sd2) = d2
	group by stock(pu);




create function stock_with_best_dev2(Portfolio po, Date d1, Date d2) -> (Stock, Number) as
	select stock(pu), maxagg(select stock_dev(s, d1, d2) from stock s)
	from Purchase pu, stock s
	where portfolio_purchase(pu) = po and stock(pu) = s;
/*
select name(p), stock_with_best_dev2(p, |2003-12-03|, |2003-12-09|) from portfolio p;

select maxagg(select sell(sd2)-sell(sd1) from stock_data sd1, stock_data sd2);
*/